version: '3.8'

services:
  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: kafka-ui
    depends_on:
      - kafka-1
    networks:
      - event_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - event_net

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: "kafka-1"
    container_name: "kafka-1"
    volumes:
      - ./kafka-2_0_0.yml:/opt/jmx-exporter/kafka-2_0_0.yml
      - ./jmx_prometheus_javaagent-0.20.0.jar:/opt/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar
    depends_on:
      - zookeeper
    networks:
      - event_net

  cassandra-1:
    image: "cassandra:latest"
    container_name: "cassandra-1"
    hostname: "cassandra-1"
    networks:
      - event_net
    volumes:
      - cassandra-node-1:/var/lib/cassandra:rw
    restart:
      on-failure
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3

  load-tester:
    image: ${DOCKER_REGISTRY-}loadtester
    container_name: "load-tester"
    build:
      context: ..
      dockerfile: load-tester/Dockerfile

  command-service:
    image: ${DOCKER_REGISTRY-}commandserviceapi
    container_name: "command-service"
    build:
      context: ..
      dockerfile: command-service/Dockerfile
    networks:
      - event_net
    depends_on:
      - kafka-1

  prometheus:
    image: prom/prometheus:latest
    container_name: "prometheus"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - command-service
      - kafka-1 
    networks:
      - event_net

  grafana:
    image: grafana/grafana:latest
    container_name: "grafana"
    depends_on:
      - prometheus
    networks:
      - event_net
    volumes:
      - grafana-storage:/var/lib/grafana

networks:
  event_net:
  
volumes:
  cassandra-node-1:
  grafana-storage: