Connect-AzAccount -TenantId 0a3da18f-239f-46f8-a6ab-776bf814fd3f
az aks update -n FleetTrackerKubServiceProd -g NetstarAus3 --attach-acr FleetTrackerKubRegistry


$REGISTRY_NAME="FleetTrackerKubRegistry"


az acr import --name $REGISTRY_NAME --source registry.k8s.io/ingress-nginx/controller:v1.2.1 --image ingress-nginx/controller:v1.2.1
az acr import --name $REGISTRY_NAME --source registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1 --image ingress-nginx/kube-webhook-certgen:v1.1.1
az acr import --name $REGISTRY_NAME --source registry.k8s.io/defaultbackend-amd64:1.5 --image defaultbackend-amd64:1.5

avmnextgenkubuat.australiaeast.cloudapp.azure.com
0816eabf-929b-42e1-bb1b-521932f05c0e

az network public-ip create --resource-group AVMNextGenResourceGroup --name AvmNextGenKubUatIP --sku Standard --allocation-method static --query publicIp.ipAddress -o tsv (20.248.228.93)


$RegistryName = "nzafleettrackercr"
$ResourceGroup = "nza-fleettracker-fleetmanager-rg"
$SourceRegistry = "k8s.gcr.io"
$ControllerImage = "ingress-nginx/controller"
$ControllerTag = "v1.2.1"
$PatchImage = "ingress-nginx/kube-webhook-certgen"
$PatchTag = "v1.1.1"
$DefaultBackendImage = "defaultbackend-amd64"
$DefaultBackendTag = "1.5"
$STATIC_IP_ADDRESS= "10.31.52.244"

$DNS_LABEL="fleet-ingress"
$NAMESPACE="ingress-base"
$IPResourceGroup="MC_nza-fleettracker-fleetmanager-rg_nza-k8s-fleettracker_southafricanorth"

# Set variable for ACR location to use for pulling images
$AcrUrl = (Get-AzContainerRegistry -ResourceGroupName $ResourceGroup -Name $RegistryName).LoginServer





helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update

# Use Helm to deploy an NGINX ingress controller
  helm install nginx-ingress ingress-nginx/ingress-nginx `
    --set controller.replicaCount=2 `
    --set controller.nodeSelector."kubernetes\.io/os"=linux `
    --set controller.image.registry=$AcrUrl `
    --set controller.image.image=$ControllerImage `
    --set controller.image.tag=$ControllerTag `
    --set controller.image.digest="" `
    --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux `
    --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz `
    --set controller.service.externalTrafficPolicy=Local `
    --set controller.admissionWebhooks.patch.image.registry=$AcrUrl `
    --set controller.admissionWebhooks.patch.image.image=$PatchImage `
    --set controller.admissionWebhooks.patch.image.tag=$PatchTag `
    --set controller.admissionWebhooks.patch.image.digest="" `
    --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux `
    --set defaultBackend.image.registry=$AcrUrl `
    --set defaultBackend.image.image=$DefaultBackendImage `
    --set defaultBackend.image.tag=$DefaultBackendTag `
    --set defaultBackend.image.digest="" `
    --set controller.service.loadBalancerIP=$STATIC_IP_ADDRESS `
    --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-resource-group"=$IPResourceGroup




az aks get-credentials --resource-group AVMNextGenResourceGroup --name AvmNextGenKub
az aks get-credentials --resource-group NetstarAus3 --name FleetTrackerKubServiceProd

$DNS_LABEL="avmnextgen-uat-ingress"
$NAMESPACE="ingress-basic"
$STATIC_IP="20.248.228.93"

helm upgrade nginx-ingress ingress-nginx/ingress-nginx `


kubectl create secret tls certficate --cert gd_bundle-g2-g1.crt --key netstar2023key.key
  --namespace $NAMESPACE `
  --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-dns-label-name"=$DNS_LABEL `
  --set controller.service.loadBalancerIP=$STATIC_IP