version: '3.8'

services:
  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: kafka-ui
    depends_on:
      - kafka-1
      - schema-registry
    networks:
      - event_net

  kafka-1:
    image: bitnami/kafka:3.4
    hostname: "kafka-1"
    container_name: "kafka-1" 
    volumes:
      - kafka1_data:/bitnami
    networks:
      - event_net

  kafka-2:
    image: bitnami/kafka:3.4
    hostname: "kafka-2"
    container_name: "kafka-2"    
    volumes:
      - kafka2_data:/bitnami
    networks:
      - event_net

  kafka-3:
    image: bitnami/kafka:3.4
    hostname: "kafka-3"
    container_name: "kafka-3"   
    volumes:
      - kafka3_data:/bitnami
    networks:
      - event_net

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - event_net

  cassandra-1:
    image: "cassandra:latest"
    container_name: "cassandra-1"
    hostname: "cassandra-1"
    networks:
      - event_net
    volumes:
      - cassandra-node-1:/var/lib/cassandra:rw
    restart:
      on-failure
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3
      
  load-tester:
    image: ${DOCKER_REGISTRY-}loadtester
    build:
      context: ..
      dockerfile: load-tester/Dockerfile

  command-service:
    image: ${DOCKER_REGISTRY-}commandserviceapi
    build:
      context: ..
      dockerfile: command-service/Dockerfile
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry

networks:
  event_net:
  
volumes:
  kafka1_data:
  kafka2_data:
  kafka3_data:
  cassandra-node-1:



