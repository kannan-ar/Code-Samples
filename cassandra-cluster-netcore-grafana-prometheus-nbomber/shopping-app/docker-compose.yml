version: '3.8'

services:
  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - schema-registry
    environment:
      KAFKA_BROKERS: kafka1:9093,kafka2:9093,kafka3:9093
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONSOLE_UI_CONFIG_FILE: ""

  kafka1:
    image: bitnami/kafka:4.0.0
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - KAFKA_CFG_LISTENERS=INTERNAL://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka1:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=INTERNAL
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    volumes:
      - kafka1-data:/bitnami/kafka

  kafka2:
    image: bitnami/kafka:4.0.0
    container_name: kafka2
    hostname: kafka2
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - KAFKA_CFG_LISTENERS=INTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka2:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=INTERNAL
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    volumes:
      - kafka2-data:/bitnami/kafka

  kafka3:
    image: bitnami/kafka:4.0.0
    container_name: kafka3
    hostname: kafka3
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - KAFKA_CFG_LISTENERS=INTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka3:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=INTERNAL
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    volumes:
      - kafka3-data:/bitnami/kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - kafka1
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:9093,PLAINTEXT://kafka2:9093,PLAINTEXT://kafka3:9093
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  shoppingapp.api:
    image: ${DOCKER_REGISTRY-}shoppingappapi
    build:
      context: .
      dockerfile: ShoppingApp.Api/Dockerfile

  cassandra-1:
    image: "cassandra:latest"
    container_name: "cassandra-1"
    hostname: "cassandra-1"
    networks:
      cassandra-net:
        ipv4_address: 172.28.1.1
    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
      - CASSANDRA_LISTEN_ADDRESS=auto
      - CASSANDRA_CLUSTER_NAME=my-cluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=my-datacenter-1
    ports:
      - "9042:9042"
    volumes:
      - cassandra-node-1:/var/lib/cassandra:rw
    restart:
      on-failure
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3

  cassandra-2:
    image: "cassandra:latest"
    container_name: "cassandra-2"
    hostname: "cassandra-2"

    networks:
      cassandra-net:
        ipv4_address: 172.28.1.2

    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
      - CASSANDRA_LISTEN_ADDRESS=auto
      - CASSANDRA_CLUSTER_NAME=my-cluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=my-datacenter-1
    ports:
      - "9043:9042"
    volumes:
      - cassandra-node-2:/var/lib/cassandra:rw
    depends_on:
      cassandra-1:
        condition: service_healthy
    restart:
      on-failure
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3

  cassandra-3:
    image: "cassandra:latest"
    container_name: "cassandra-3"
    hostname: "cassandra-3"

    networks:
      cassandra-net:
        ipv4_address: 172.28.1.3

    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
      - CASSANDRA_LISTEN_ADDRESS=auto
      - CASSANDRA_CLUSTER_NAME=my-cluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=my-datacenter-1
    ports:
      - "9044:9042"
    volumes:
      - cassandra-node-3:/var/lib/cassandra:rw
    depends_on:
      cassandra-2:
        condition: service_healthy
    restart:
      on-failure
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3

networks:
  cassandra-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
  
volumes:
  cassandra-node-1:
  cassandra-node-2:
  cassandra-node-3:
  kafka1-data:
  kafka2-data:
  kafka3-data:  