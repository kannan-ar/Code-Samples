version: '3.8'

services:
  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: kafka-ui
    depends_on:
      - kafka-1
      - schema-registry
    networks:
      - event_net
    volumes:
      - ./config:/tmp/config/
    entrypoint: /bin/sh

  kafka-1:
    image: bitnami/kafka:3.4
    hostname: "kafka-1"
    container_name: "kafka-1" 
    volumes:
      - kafka1_data:/bitnami
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka-1:9092", "--list"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - event_net

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    depends_on:
      kafka-1:
        condition: service_healthy
    networks:
      - event_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  cassandra-1:
    image: "cassandra:latest"
    container_name: "cassandra-1"
    hostname: "cassandra-1"
    networks:
      - event_net
    volumes:
      - cassandra-node-1:/var/lib/cassandra:rw
    restart:
      on-failure
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3
      
  load-tester:
    image: ${DOCKER_REGISTRY-}loadtester
    container_name: "load-tester"
    build:
      context: ..
      dockerfile: load-tester/Dockerfile

  command-service:
    image: ${DOCKER_REGISTRY-}commandserviceapi
    container_name: "command-service"
    build:
      context: ..
      dockerfile: command-service/Dockerfile
    networks:
      - event_net
    depends_on:
      - kafka-1
      - schema-registry

networks:
  event_net:
  
volumes:
  kafka1_data:
  cassandra-node-1:



